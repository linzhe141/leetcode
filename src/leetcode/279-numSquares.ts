// 279. 完全平方数 背包问题
export function numSquares(n: number): number {
  // f1  = 1^2 =>1
  // f2  = 1^2 + 1^2 => 2
  // f3  = 1^2 + 1^2 + 1^2 => 3 => f1 + f2
  // f4  = 2^2=> 1
  // f5  = 2^2 + 1^2 => 2 => f4 + f1
  // f6  = 2^2 + 1^2 + 1^2 => 3 => f4 + f2
  // f7  = 2^2 + 1^2 + 1^2 + 1^2 => 4 => f4 + f3
  // f8  = 2^2 + 2^2 => 2 => f4 + f4
  // f9  = 3^2 => 1
  // f10 = 3^2 + 1^2 => 2 => f9 + f1
  // f11 = 3^2 + 1^2 + 1^2 => 3 => f9 + f2
  // f12 = 2^2 + 2^2 + 2^2 => 3 => f4 + f4 + f4
  // f13 = 3^2 + 2^2 => 2 => f9 + f4
  // f14 = 3^2 + 2^2 + 1^2 => 2 => f9 + f4 + f1
  const arr = Array(n + 1)
    .fill(0)
    .map((_, i) => i)
  for (let i = 1; i <= n; i++) {
    for (let j = 1; j * j <= i; j++) {
      // 表示
      // arr[i] 表示 数字i的最小平方和数字的个数
      // 极端情况就是 所有都是1^2那么就是i，既个数为i
      // 就可以看作是数字i 和 j^2 的和为 i， 那么个数就会加上1（j^2）的j
      // 而j^2的取值范围一定在 [1,i]
      arr[i] = Math.min(arr[i], arr[i - j * j] + 1)
    }
  }
  return arr[n]
}
